name: 'publish'
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install pnpm
        run: npm i -g pnpm
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install app dependencies
        run: pnpm install
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri"
      - name: Add arm support
        run: rustup target add aarch64-apple-darwin

      - name: "Build app"
        run: "pnpm tauri build --target universal-apple-darwin"

      - name: Create Version Number
        id: versions
        run: |
          git fetch
          VERSION_WITHOUT_SUFFIX="$(node -p "require('./package.json').version")"
          function parse_git_hash() {
            git rev-list --count origin/release
          }
          MAIN_COUNT=$(parse_git_hash)
          APP_VERSION="$VERSION_WITHOUT_SUFFIX+$MAIN_COUNT"
          echo "::set-output name=version::$(echo $APP_VERSION)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versions.outputs.version }}
          release_name: Release ${{ steps.versions.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
          asset_name: Toolboard.dmg
          asset_content_type: application/octet-stream

